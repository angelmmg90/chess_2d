package seas.angel.macdonald.chess2d.vista;

import java.awt.*;
import javax.swing.*;

/**
 * Clase que carga la SplashScreen nada más inciar el juego
 * 
 * @author Ángel Mac Donald Gainza
 */
public class SplashScreen extends JWindow {
  /**
   * Variable que establece la duración del SplashScreen
   */  
  private int duration;
  /**
   * Contructor del SplashScreen 
   * 
   * @param d int 
   */
  public SplashScreen(int d) {
    duration = d;
  }

  
  /**
   * Método que se encarga de mostrar en el centro de la pantalla la SplashScreen el tiempo que se le ha indicado en el constructor
   */
  public void showSplash() {
    JPanel content = (JPanel)getContentPane();
    content.setBackground(Color.white);

    // Configuramos la ventana
    int width = 727;
    int height = 432;
    Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
    int x = (screen.width-width)/2;
    int y = (screen.height-height)/2;
    setBounds(x,y,width,height);

    
    JProgressBar progressBar = new JProgressBar();
    progressBar.setStringPainted(true);
    progressBar.setMinimum(0);
    progressBar.setMaximum(100);
    progressBar.setForeground(Color.ORANGE);
    Font font = new Font("Arial", Font.BOLD, 15);
    progressBar.setFont(font);
    //progressBar.setBorder(BorderFactory.createLineBorder(null, 1));
    

    ImageIcon img = new ImageIcon("src/seas/angel/macdonald/chess2d/recursos/splash_screen.png");
    //Image scaled = img.getImage().getScaledInstance(0, 0, Image.SCALE_SMOOTH);
    //ImageIcon imgIconScaled = new ImageIcon(scaled);
    
    JLabel label = new JLabel(img);
    
    content.add(label, BorderLayout.CENTER);
    content.setBorder(BorderFactory.createLineBorder(null, 2));
    content.add(progressBar, BorderLayout.SOUTH); 
    setVisible(true);
    
    // Aumentamos el porcentaje de la progressBar
    for (int i = 0; i <= 100; i++) {
      final int percent = i;
      try {
        SwingUtilities.invokeLater(new Runnable() {
          public void run() {
            progressBar.setValue(percent);
          }
        });
        java.lang.Thread.sleep(100);
      } catch (InterruptedException e) {
        
      }
    }

    // Se espera mientras se cargan los recursos
    try { 
        Thread.sleep(duration); 
    } catch (Exception e) {}

    setVisible(false);
  }
  /**
   * Método que llama al método principal
   */
  public void showSplashAndExit() {
    showSplash();
    //System.exit(0);
  }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
